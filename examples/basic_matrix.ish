(struct Matrix
  (data))

(defun matrix (n m)
  (var mat (makeinstance Matrix))
  (set mat data (array))
  (loop (var r 0) (< r n) (= r (+ r 1))
        (arradd (get mat data) (arraysv m 0)))
  mat)

(defun matrix_n (mat)
  (arrlen (get mat data)))

(defun matrix_m (mat)
  (arrlen (arrget (get mat data) 0)))

(defun matrix_get (mat i j)
  (arrget (arrget (get mat data) i) j))

(defun matrix_set (mat i j val)
  (arrset (arrget (get mat data) i) j val))

(defun matrix_id (n)
  (var mat (matrix n n))
  (loop (var i 0) (< i n) (= i (+ i 1))
        (matrix_set mat i i 1))
  mat)

(defun matrix_fromArray (n m arr)
  (defun row (i)
    (/ i m))

  (defun col (i)
    (% i m))

  (if (== (* n m) (arrlen arr))
      (progn
        (var mat (matrix n m))
        (loop (var i 0) (< i (arrlen arr)) (= i (+ i 1))
              (matrix_set mat (row i) (col i) (arrget arr i)))
        mat)
    (progn
      (println "matrix_array: Incompatible array size")
      null)))

(defun matrix_add (lhs rhs)
  (if (and (== (matrix_n lhs) (matrix_n rhs))
           (== (matrix_m lhs) (matrix_m rhs)))
      (progn
        (var ret (matrix (matrix_n lhs) (matrix_m lhs)))
        (loop (var i 0) (< i (matrix_n lhs)) (= i (+ i 1))
              (loop (var j 0) (< j (matrix_m lhs)) (= j (+ j 1))
                    (matrix_set ret i j (+ (matrix_get lhs i j) (matrix_get rhs i j)))))
        ret)
    (progn
      (println "matrix_add: Invalid matrix sizes")
      null)))

(defun matrix_mul (lhs rhs)
  (defun aggregate (i j)
    (var agg 0)
    (loop (var k 0) (< k (matrix_n rhs)) (= k (+ k 1))
          (= agg (+ agg (* (matrix_get lhs i k) (matrix_get rhs k j))))))

  (if (== (matrix_m lhs) (matrix_n rhs))
      (progn
        (var ret (matrix (matrix_n lhs) (matrix_m rhs)))
        (loop (var i 0) (< i (matrix_n lhs)) (= i (+ i 1))
              (loop (var j 0) (< j (matrix_m rhs)) (= j (+ j 1))
                    (matrix_set ret i j (aggregate i j))))
        ret)
    (progn
      (println "matrix_mul: Invalid matrix sizes")
      null)))

(defun matrix_print (mat)
  (if (istypeof mat none)
      (println mat)
    (progn
      (var lastRowIndex (- (matrix_n mat) 1))
      (loop (var i 0) (< i (matrix_n mat)) (= i (+ i 1))
            (progn
              (if (== i 0) (print "[") (print " "))
              (print (arrget (get mat data) i))
              (if (== i lastRowIndex) (println "]") (println ""))))
      (println ""))))

(println "mat3x3")
(var mat3x3 (matrix_fromArray 3 3 (array 1 2 3 4 5 6 7 8 9)))
(matrix_print mat3x3)

(println "mat3x2")
(var mat3x2 (matrix_fromArray 3 2 (array 2 4 6 6 4 2)))
(matrix_print mat3x2)

(println "id3x3")
(var id3x3 (matrix_id 3))
(matrix_print id3x3)

(println "mat3x3 + id3x3")
(matrix_print (matrix_add mat3x3 id3x3))

(println "mat3x3 * mat3x2")
(matrix_print (matrix_mul mat3x3 mat3x2))
