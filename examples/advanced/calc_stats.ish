(struct Summary
  (count
   sum
   mean
   min
   max
   variance
   stddev))

(defun calcSumAvgMinAndMax (arr)
  (var size (len arr))
  (var sum 0.0)
  (var avg 0.0)
  (var min 0.0)
  (var max 0.0)
  (when (> size 0)
    (progn
      (= min (get arr 0))
      (= max (get arr 0))
      (foreach num arr
        (progn
          (= sum (+ sum num))
          (when (< num min) (= min num))
          (when (> num max) (= max num))))
      (= avg (/ sum (astype size real)))))
  (array sum avg min max))

(defun calcVariance (arr average)
  (var size (len arr))
  (var variance 0.0)
  (when (> size 0)
    (progn
      (foreach num arr
        (= variance (+ variance (^ (- num average) 2))))

      (when (> size 1)
        (= variance (/ variance (astype (- size 1) real))))))
  variance)

(defun makeSummary (arr)
  (var samm (calcSumAvgMinAndMax arr))
  (var mean (get samm 1))
  (var variance (calcVariance arr mean))

  (makeinstance Summary
    (count (len arr))
    (sum (get samm 0))
    (mean mean)
    (min (get samm 2))
    (max (get samm 3))
    (variance variance)
    (stddev (^ variance 0.5))))

(defun calcStats (arr)
  (defun printStat (name value)
    (println name ": " value))

  (var summary (makeSummary arr))

  (printStat "arr" arr)
  (printStat "cnt" (get summary count))
  (printStat "sum" (get summary sum))
  (printStat "avg" (get summary mean))
  (printStat "min" (get summary min))
  (printStat "max" (get summary max))
  (printStat "var" (get summary variance))
  (printStat "std" (get summary stddev)))
