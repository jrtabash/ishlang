* Add arrcount operation to count occurrences of value in array

* Add support for file IO

* Add generic functions
  - Add generic get function with support for instances, strings and arrays
  - Add generic set function with support for instances, strings and arrays
  - Add generic len function with support for strings and arrays
  - Add generic find function with support for strings and arrays
  - Add generic count function with support for strings and arrays

* Implement built-in data structures:
  - List
  - Hash table
  - Ordered table

* Add rand function that returns a random integer between 0 and
  a max value
  Examples: (rand)
            (rand 100)

* Add support for command line arguments
  Idea:
    Command:
      ishlang -f calc_sum.ish --args -v -n 10
    In Code:
      (progarg "-v" verbose bool)
      (progarg "-n" num int)
      (proginit)
      (println (pargval verbose))
      (println (pargval num))
    Functions:
      (progarg <option_name> <variable_name> <option_type>)
      (pargval <variable_name>
      (proginit)

* Add support for modules

* Rework 'break' implementation to avoid using Break::Except

* Remove ignoreRightP uses from initAppFtns
