* Add hmitems function to hashmap to
  return array of key/value pairs

* Add support for file IO
  Add file type
  File functions
  - fopen
  - fclose
  - fflush
  - fread
  - fwrite
  - fget
  - fput
  - fgetline
  - ftell
  - fseek
  File variables
  - stdin
  - stdout
  - stderr

* Implement built-in data structures:
  List:
  - list
  - lislen    (list length)
  - lisfront  (list front)
  - lisback   (list back)
  - lispushf  (list push front)
  - lispopf   (list pop front)
  - lispushb  (list push back)
  - lispopb   (list pop back)
  - lisget    (list get item at index)
  - lisset    (list set item at index)
  - lisadd    (list append)
  - lisins    (list insert at index)
  - lisrem    (list remove index)
  - lisclr    (list clear)
  - lisfind   (list find value index)
  - liscount  (list count value)
  - lissort   (list sort)
  - lisrev    (list reverse)
  Ordered table
  - orderedmap
  - omlen    (orderedmap length)
  - omhas    (orderedmap has key)
  - omget    (orderedmap get)
  - omset    (orderedmap set)
  - omrem    (orderedmap remove)
  - omclr    (orderedmap clear)
  - omfind   (orderedmap find by value)
  - omcount  (orderedmap count value)
  - omkeys   (orderedmap keys)
  - omvals   (orderedmap values)
  - omitems  (orderedmap items)

* Add string functions
  - strsort  (string sort)
  - strrev   (string reverse)
  - strcmp   (string compare)

* Add array functions
  - arrins   (array insert at index)
  - arrrem   (array remove index)
  - arrclr   (array clear)
  - arrsort  (array sort)
  - arrrev   (array reverse)

* Add generic functions
  - Add generic get function with support for instances, strings, arrays and hashmaps
  - Add generic set function with support for instances, strings, arrays and hashmaps
  - Add generic len function with support for strings, arrays and hashmaps
  - Add generic find function with support for strings, arrays and hashmaps
  - Add generic count function with support for strings, arrays and hashmaps
  - Note: Should work with future types; list and orderedmap.

* Add generic sort and reverse functions for string, array and list (future) types:
  - sort(sequence, key=null, asc=true)
  - reverse(sequence)

* Add support for command line arguments
  Idea:
    Command:
      ishlang -f calc_sum.ish --args -v -n 10
    In Code:
      (progarg "-v" verbose bool)
      (progarg "-n" num int)
      (proginit)
      (println (pargval verbose))
      (println (pargval num))
    Functions:
      (progarg <option_name> <variable_name> <option_type>)
      (pargval <variable_name>
      (proginit)

* Rework 'break' implementation to avoid using Break::Except
