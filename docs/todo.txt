* Restructure ishlang file/code heirarchy:
  - ishlang
    - docs
    - examples
    - src
      - util
      - base: value, environment, lambda, sequence, struct, instance, exception
      - codenode: separate codenodes into multiple files
      - parser: lexer, parser
      - interpreter
      - unit_tests
      - test_runner
      - test_scenarios

* Add additional type operators
  - typename := return builtin type name of operand
    E.g. (typename 3) will return "int"
  - structname := return struct name of operand
    E.g. Assume a Person struct, and an instance p of Person
         (structname p) will return "Person"

* Add support for type conversion
  - real <-> integer
  - character <-> integer (characer ascii value)
  - string <-> numeric (e.g. "123" <-> 123)
  - string <-> character array (e.g. "12" <-> [1 2])

* Add array / string operations
  - arrfind  : Find position of value in array
  - arrcount : Count occurences of value in array
  - strcount : Count occurences of character in string

* Add 'when' and 'unless' conditional statements
  - (when <condition_expression> <true_expression>)
  - (unless <condition_expression> <false_expression>)

* Add support for file IO

* Cleanup and unification:
  - Remove def support in favor of defun
  - Rename member get and set functions to memget and memset
  - Rename string setchar and getchar to strget and strset
  - Add generic get / set functions that work with instances, strings and arrays
  - Add generic len function for strings and arrays
  - Add generic find function for strings and arrays
  - Add generic count function for strings and arrays

* Implement built-in data structures:
  - List
  - Hash table
  - Ordered table

* Add support for modules

* Rework 'break' implementation to avoid using Break::Except
